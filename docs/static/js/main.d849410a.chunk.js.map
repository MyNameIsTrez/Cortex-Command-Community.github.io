{"version":3,"sources":["components/Background/Title/Title.js","components/Background/planetoids/Moon.js","components/Background/planetoids/Planet.js","components/Background/MagicArrow/MagicArrow.js","components/Background/Background.js","components/Header/Header.js","components/Content/Content.js","components/PageBody/PageBody.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Title","props","className","src","alt","style","top","yCenter","maxHeight","Moon","position","left","xCenter","display","maxWidth","height","width","Planet","planetHeight","margin","marginTop","zIndex","marginBottom","textAlign","bottom","overflow","transformOrigin","MagicArrow","onClick","document","getElementById","scrollIntoView","behavior","border","padding","backgroundColor","cursor","calculateExtraPlanetOffset","Math","min","window","innerHeight","calculateFinalOffset","titleHeight","calculateTitleBreakpoints","calculateInitialTitleOffset","calculateInitialPlanetOffset","calculateInitialMoonOffsetX","innerWidth","calculateInitialMoonOffsetY","calculateTitleY","pageYOffset","calculatePlanetY","calculateMoonY","offset","max","calculateMoonX","Background","setOffset","setTitleY","setMoonX","setMoonY","setPlanetY","setPlanetSize","useState","titleY","planetY","moonX","moonY","planetSize","useEffect","addEventListener","removeEventListener","Header","borderTop","borderBottom","boxSizing","borderLeft","borderRight","color","fontSize","fontFamily","flexWrap","justifyContent","alignItems","href","Content","PageBody","minHeight","flexDirection","pointerEvents","flexGrow","id","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d849410a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Title.css';\r\n\r\nfunction Title(props) {\r\n    const halfTitleHeight = 181 / 2;\r\n\r\n    return (\r\n        <>\r\n            <img className=\"title\" src='./title-with-glow.png' alt='Cortex Command' style={{\r\n                top: props.yCenter - halfTitleHeight,\r\n                maxHeight: '181px',\r\n            }} />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Title;\r\n","import React from 'react';\r\n\r\nfunction Moon(props) {\r\n    return (\r\n        <img src='./moon.png' alt=\"\" style={{\r\n            position: 'fixed',\r\n            top: props.yCenter,\r\n            left: props.xCenter,\r\n            display: 'block',\r\n            maxHeight: '176px',\r\n            maxWidth: '176px',\r\n            height: 'auto',\r\n            width: 'auto',\r\n        }}/>\r\n    );\r\n}\r\n\r\nexport default Moon;\r\n","import React from 'react';\r\nimport './Station.css';\r\n\r\nconst stationHeight = 27;\r\n\r\nfunction Planet(props) {\r\n    return (\r\n        <div style={{\r\n            display: 'block',\r\n            height: 'auto',\r\n            width: 'auto',\r\n            maxHeight: props.planetHeight + stationHeight,\r\n            maxWidth: props.planetHeight + 2 * stationHeight,\r\n            margin: 'auto',\r\n            position: 'sticky',\r\n            top: props.yCenter - (props.planetHeight + stationHeight) / 2,\r\n            marginTop: - (props.planetHeight + stationHeight) / 2,\r\n            zIndex: '9',\r\n            marginBottom: '250px',\r\n            textAlign: 'center',\r\n        }}>\r\n            <div style={{\r\n                position: 'absolute',\r\n                top: - stationHeight,\r\n                bottom: - stationHeight,\r\n                width: '100%',\r\n                zIndex: '10',\r\n                overflow: 'hidden',\r\n                textAlign: 'initial'\r\n            }}>\r\n                <img src='./station.png' className='station' alt=\"\" style={{\r\n                    transformOrigin: `0 ${props.planetHeight / 2 + stationHeight}px`,\r\n                }}/>\r\n            </div>\r\n            <img src='./planet.png' alt=\"\" style={{\r\n                height: '100%',\r\n                width: '100%',\r\n                maxHeight: props.planetHeight,\r\n                maxWidth: props.planetHeight,\r\n            }} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Planet;\r\n","import React from 'react';\r\n\r\nfunction MagicArrow() {\r\n    const onClick = () => {\r\n        document.getElementById('main-content').scrollIntoView({ behavior: 'smooth' });\r\n    };\r\n\r\n    return (\r\n        <div style={{\r\n            position: 'fixed',\r\n            bottom: '20px',\r\n            width: '100%',\r\n            zIndex: '100',\r\n        }}>\r\n            <button onClick={onClick} style={{\r\n                border: '0',\r\n                padding: '0',\r\n                backgroundColor: 'transparent',\r\n                margin: 'auto',\r\n                display: 'block',\r\n                cursor: 'pointer'\r\n            }}>\r\n                <img src=\"./arrow.gif\" alt=\"Scroll to content\"/>\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MagicArrow;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Title from './Title/Title';\r\nimport Moon from './planetoids/Moon';\r\nimport Planet from './planetoids/Planet';\r\nimport MagicArrow from './MagicArrow/MagicArrow';\r\n// import Nebula from './Nebula/Nebula';\r\n\r\nconst titleHeight = 181;  // Pixel height of title image\r\nconst planetHeight = 550; // Pixel size of planet image, 1:1 aspect ratio\r\n// const moonHeight = 176;   // Pixel size of moon image, 1:1 aspect ratio\r\n\r\nconst moonParallaxRateX = .2;\r\nconst moonParallaxRateY = .8;\r\n\r\nconst calculateExtraPlanetOffset = () => {\r\n    return Math.min(planetHeight, window.innerHeight) / 4;\r\n};\r\n\r\nconst calculateFinalOffset = () => {\r\n    return window.innerHeight - titleHeight / 2 + calculateExtraPlanetOffset()\r\n};\r\n\r\nconst calculateTitleBreakpoints = () => {\r\n    return [0, window.innerHeight / 2 + calculateExtraPlanetOffset(), calculateFinalOffset()]\r\n}\r\n\r\nconst calculatePlanetBreakpoints = () => {\r\n    return [0, calculateFinalOffset()];\r\n} \r\n\r\nconst calculateInitialTitleOffset = () => {\r\n    return window.innerHeight / 2;\r\n};\r\n\r\nconst calculateInitialPlanetOffset = () => {\r\n    return window.innerHeight + calculateExtraPlanetOffset();\r\n};\r\n\r\nconst calculateInitialMoonOffsetX = () => {\r\n    return (window.innerWidth + planetHeight) / 2 - planetHeight / 8;\r\n};\r\n\r\nconst calculateInitialMoonOffsetY = () => {\r\n    return window.innerHeight - 1.8 * calculateExtraPlanetOffset();\r\n};\r\n\r\nconst calculateTitleY = () => {\r\n    if (window.pageYOffset < calculateTitleBreakpoints()[1]) {\r\n        return calculateInitialTitleOffset();\r\n    } else if (window.pageYOffset >= calculateTitleBreakpoints()[1] && window.pageYOffset < calculateTitleBreakpoints()[2]) {\r\n        return calculateInitialTitleOffset() + calculateTitleBreakpoints()[1] - window.pageYOffset;\r\n    } else {\r\n        return titleHeight / 2;\r\n    }\r\n};\r\n\r\nconst calculatePlanetY = () => {\r\n    if (window.pageYOffset < calculatePlanetBreakpoints()[1]) {\r\n        return calculateInitialPlanetOffset() - window.pageYOffset;\r\n    } else {\r\n        return titleHeight / 2;\r\n    }\r\n};\r\n\r\nconst calculateMoonY = () => {\r\n    const finalOffset = -150;\r\n\r\n    let offset = calculateInitialMoonOffsetY() - moonParallaxRateY * window.pageYOffset;\r\n    return Math.max(offset, finalOffset)\r\n};\r\n\r\nconst calculateMoonX = () => {\r\n    return calculateInitialMoonOffsetX() - moonParallaxRateX * window.pageYOffset;\r\n};\r\n\r\nfunction Background() {\r\n    const setOffset = () => {\r\n        setTitleY(calculateTitleY);\r\n\r\n        setMoonX(calculateMoonX);\r\n        setMoonY(calculateMoonY);\r\n\r\n        setPlanetY(calculatePlanetY);\r\n        setPlanetSize(Math.min(planetHeight, window.innerWidth));\r\n    }\r\n\r\n    const [titleY, setTitleY] = useState(calculateInitialTitleOffset());\r\n    const [planetY, setPlanetY] = useState(calculateInitialPlanetOffset());\r\n    const [moonX, setMoonX] = useState(calculateInitialMoonOffsetX());\r\n    const [moonY, setMoonY] = useState(calculateInitialMoonOffsetY());\r\n    const [planetSize, setPlanetSize] = useState(planetHeight);\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('resize', setOffset)\r\n        window.addEventListener(\"scroll\", setOffset);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"resize\", setOffset);\r\n            window.removeEventListener(\"scroll\", setOffset);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {/* <Nebula/> */}\r\n            <Title yCenter={titleY} />\r\n            <Planet yCenter={planetY} planetHeight={planetSize} />\r\n            <Moon yCenter={moonY} xCenter={moonX} />\r\n            <MagicArrow />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Background;\r\n","import React from 'react';\r\nimport './Header.css';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className='header' style={{\r\n            borderTop: '4px solid #f9de8f',\r\n            borderBottom: '1px solid black',\r\n            boxSizing: 'border-box',\r\n            borderLeft: '0',\r\n            borderRight: '0',\r\n            textAlign: 'center',\r\n            color: 'white',\r\n            fontSize: '30px',\r\n            fontFamily: '\"Montserrat\", sans-serif',\r\n        }}>\r\n            <ul style={{\r\n                display: 'flex',\r\n                flexWrap: 'wrap',\r\n                margin: 'auto',\r\n                padding: '0',\r\n                maxWidth: '800px',\r\n                justifyContent: 'space-between',\r\n                alignItems: 'center',\r\n                height: '100%',\r\n            }}>\r\n                <li><a href=\"https://cortex-command-community.github.io/\"><span>Home</span></a></li>\r\n                <li><a href=\"https://github.com/cortex-command-community\"><span>Downloads</span></a></li>\r\n                <li><a href=\"http://wiki.datarealms.com/Cortex_Command\"><span>Wiki</span></a></li>\r\n                <li><a href=\"https://github.com/cortex-command-community/Cortex-Command-Community-Project-Source/issues\"><span>Issues</span></a></li>\r\n                <li><a href=\"http://forums.datarealms.com/\"><span>Forum</span></a></li>\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './Content.css';\r\n\r\nfunction Content() {\r\n    return (\r\n        <>\r\n            <p>\r\n                The Cortex Command Community Project is a fan led effort to completly revamp Data Realm's\r\n                <span className='italic'> Cortex Command</span>, and to realize the original vision for\r\n                the game.\r\n                <br></br>\r\n                <br></br>\r\n                CCCP runs on a modified version of the original engine. Changes will allow for enhanced and improved \r\n                gameplay. New content will be added based off of Arne's original concept art and ideas as well as\r\n                ideas sourced from the community.\r\n            </p>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Content;\r\n\r\n\r\n","import React from 'react';\r\nimport Header from '../Header/Header';\r\nimport Content from '../Content/Content';\r\n\r\nfunction PageBody() {\r\n    return (\r\n        <>\r\n            <div style={{\r\n                position: 'sticky',\r\n                top: '0',\r\n                minHeight: '100vh',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                zIndex: '100',\r\n                pointerEvents: 'none',\r\n            }}>\r\n                <div style={{ height: 181 }} />\r\n                <div style={{\r\n                    position: 'relative',\r\n                    pointerEvents: 'initial',\r\n                    flexGrow: '1',\r\n                    display: 'flex',\r\n                    flexDirection: 'column',\r\n                }}>\r\n                    <Header />\r\n                    <div style={{\r\n                        backgroundColor: '#242424',\r\n                        flexGrow: '1',\r\n                    }}>\r\n                        <img src='./banner.png' alt='' style={{\r\n                            width: '100%',\r\n                        }}></img>\r\n                        <div id=\"main-content\" style={{\r\n                            maxWidth: '800px',\r\n                            backgroundColor: '#242424',\r\n                            // TODO: On large screen sizes this should go on top of the banner image.\r\n                            margin: '0 auto',\r\n                            padding: '50px',\r\n                            boxSizing: 'border-box',\r\n                            fontSize: '16pt',\r\n                            zIndex: '10',\r\n                            position: 'relative',\r\n                        }}>\r\n                            <Content />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default PageBody;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Background from '../Background/Background';\r\nimport PageBody from '../PageBody/PageBody';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Background></Background>\r\n      <section style={{\r\n        height: '100vh',\r\n      }}>\r\n      </section>\r\n      <section style={{\r\n        height: '20vh',\r\n      }}>\r\n      </section>\r\n      <section>\r\n        <PageBody/>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}